

print: 'simple string decoding';

msg = 'aaabbbccc';
result = 0;

decode msg 
{
	'aaa', 'ddd', 'ccc' -> result = 1;
	'aaa', 'bbb', 'ccc' -> result = 2;
	'aaa', 'bdb', 'ccc' -> result = 3;
}

if result != 2:
  throw test.decoding, 'simle string decoding failed';




print: 'regular expression matching';

msg = 'aaa100bbb';
result = 0;

decode msg 
{
	'aaa', 'ddd', 'ccc' -> 		result = 1;
	'aaa', r'[0-9]+', r'[a-z]+' -> 	result = 2;
	'aaa', 'bdb', 'ccc' -> 		result = 3;
}

if result != 2:
  throw test.decoding, 'simle regex decoding failed';



print: 'regex decoding with assign';

msg = 'aaa100bbb';
head = '';
number = '';
tail = '';

decode msg 
{
	'aaa', 'ddd', 'ccc' ->  print: 'not matched';
	%head, %number = r'[0-9]+', %tail -> print: 'matched';
	'aaa', 'bdb', 'ccc' -> print: 'not matched';
}

print : 'head:', head, 'number:', number, 'tail:', tail;
if head != 'aaa' || number != '100' || tail != 'bbb':
  throw test.decoding, 'decode assign failed';


print: 'list decoding';

lists = [1,2,3,4,5];

decode lists
{
	[2], %s, [4, 5] -> print: 'matched 1: ', s;
	[1], %s, [4, 5] -> print: 'matched 2: ', s;
	[]	 	-> print: 'empty';
}

print: s;

if s != [2, 3]:
  throw test.decoding, 'list decoding failed';



def.decode tail(p)
{
	[]	-> print: 'done';
	%x:%xs	-> {
			print: x, ':', xs;
			tail(xs);
	}
}


my.tail([1,2,3,4,5]);


print: 'OK';


