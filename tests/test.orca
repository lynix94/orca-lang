using time.stopwatch;

test_vectors = [
  'test_arith',
  'test_control',
  'test_list',
  'test_tuple',
  'test_map',
  'test_exception',
  'test_string',
  'test_format',
  'test_oo',
  'test_gc',
  'test_operator',
  'test_shell',
  'test_iter',
  'test_lambda',
  'test_thread',
  'test_scope',
  'test_decode',
  'test_sbf',
  'test_para',
#  'test_para_for', # add later
  'test_type',
  'test_orca',
  'test_lang',
  'test_parse',
  'test_context',
  'test_channel',
  'test_select',
  'test_timer',
  'test_queue',
];

test_modules = [
  'test_file',
  'test_ipc',
  'test_socket',
  'test_fdselect',
  'test_os',
  'test_fun',
  'test_date',
  'test_time',
  'test_datetime',
  'test_remote',
  'test_dist',
  'test_dfsd',
  'test_system',
  'test_math',
  'test_alg',
#  'test_lisp', # need to build lisp.orca first
  'test_xml',
  'test_json',
#  'test_gnuplot', # to save time
  'test_log',
  'test_sqlite3',
  'test_leveldb',
  'test_orm',
  'test_pack',


#### not be made yet
#  'test_sh',
#  'test_cpp',
#  'test_awk',
#  'test_run',
#  'test_util',
];
	
stopwatch.title('elapsed time: ') {
	try{
		for t in test_vectors {
			print: '### Test: %s start' % t;
			orca.load(t);
			root.MEMBERS[t]();
			print: '### Test: %s end' % t;
		}

		for t in test_modules {
			print: '### Test: %s start' % t;
			orca.load(t);
			root.MEMBERS[t]();
			print: '### Test: %s end' % t;
		}
	}
	catch test as e {
		print: '!!! Fail !!!';
		print: e.what();
		return;
	}
}

print: '### All cases Success ###';


