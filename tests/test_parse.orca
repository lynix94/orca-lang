
def.parse calc(str)
{
	stmt : stmt '+' mul
				def(...) {
					return argv[0] + argv[2];
				}
		| stmt '-' mul
				def(...) {
					return argv[0] - argv[2];
				}
		| mul
				def(...) {
					return argv[0];
				}
		;

	mul : mul '*' number
				def(...) {
					return argv[0] * argv[2];
				}
		|  mul '/' number
				def(...) {
					return argv[0] / argv[2];
				}
		| number
				def(...) {
					return argv[0];
				}
		;

	number : r'[0-9]+'
				def(...) {
					return argv[0].integer();
				}
		;

	~ : r'[ \t\r\n]+'
		;
}


print: r = my.calc('1*3');
if r != 3:
	throw test.parsing, 'parsing result is wrong';

print: r = my.calc('1+2-3');
if r != 0:
	throw test.parsing, 'parsing result is wrong';

print: r = my.calc('3+4*100/20-3');
if r != 20:
	throw test.parsing, 'parsing result is wrong';

print: 'OK';


