
using storage.sqlite3;
using orm;
using os;

print: '# migrate dir: ', argv;
if argv == nil || argv.size() < 1 {
	return false;
}

conn = sqlite3.connect('sonar.db');
orm.set_conn(conn);

curr_list = my.get_models(argv[0]);
print: '# models: ', curr_list;
for m in curr_list {
	ret = orca.load(m, my);
	print: '# my.MEMBERS: ', my.MEMBERS;
	print: '# my.models.MEMBERS: ', my.models.MEMBERS;
	for k, v in my.models.MEMBERS {
		print: v;
		v.create_table();
	}
	
	ret = orca.unload('models', my);
	print: my.MEMBERS;
}

return;




def get_models(path)
{
	src_list = [];
	it = os.dir_traverser(path);
	for i in it {
		if os.isdir(i()) {
			continue;
		}

		basename = os.path.basename(i());
		if basename == ('models.orca') {
			src_list.push_back(i());
		}
	}

	return src_list;
}




