using log;
using datetime;

def name := 'log';
def flag := {,};
def '<-' := my.print_log;

static def printer := io.print;

static def header()
{
	return '[%s] ' % datetime.now();
}

static def print_log(msg)
{
	log.printer(log.header() + msg);
}

def print_flag()
{
	print: '[%s - %s]' % (..name, ..'<-');

	for k, v in ..flag {
		item = nil;
		if ..flag.has_key(k) {
			item = v;
		}

		if item != nil {
			item.print_flag(..name + '.' + k);
		}
	}
}

def init(name)
{
	..name = name;
}

def '.'(name)
{
	if ..flag.has_key(name) == false {
		nlog = owner.clone(name);
		nlog.flag = {,};
		..flag[name] = nlog;
	}

	return ..flag[name];
}


if argv.size() > 0 {
	if argv[0] == true {
		my.'<-' = my.print_log;
	}
	else {
		my.'<-' = nil;
	}

	return my;
}


