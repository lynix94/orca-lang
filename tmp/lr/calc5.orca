
def var_table := type.map();

parse def foo(str)
{
	stmt_done : stmt_list
			;

	stmt_list : stmt_list stmt ';'
		| stmt ';'
		;

	stmt : add 
				%c{
					print: argv[0];
				}
		;

	add : add '+' mul
				%c{
					return argv[0] + argv[2];
				}
		| add '-' mul
				%c{
					return argv[0] - argv[2];
				}
		| mul
				%c{
					return argv[0];
				}
		;

	mul : mul '*' primary
				%c{
					return argv[0] * argv[2];
				}
		|  mul '/' primary
				%c{
					return argv[0] / argv[2];
				}
		| primary
				%c{
					return argv[0];
				}
		;

	primary: '(' add ')'
				%c{
					return argv[1];
				}
		| number
				%c{
					return argv[0];
				}
		| var
				%c{
					return argv[0];
				}
		;


	number : r'[0-9]+'
				%c{
					return argv[0].integer();
				}
		;

	~ : r'[ \t\r\n]+'
		;
}

str = "3;";
print: my.foo(str);
print: 'done 1';

str = "1+2;";
print: my.foo(str);
print: 'done 2';

str = "3+4;3;";
print: my.foo(str);
print: 'done 3';
		
str = """
3+4;
((3*4)+2)/3;
""";
print: my.foo(str);
print: 'done 4';
		

