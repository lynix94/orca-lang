
parse def foo(str)
{
	stmt_done : add
				%c{
					return argv[0];
				}
		;

	add : add '+' mul
				%c{
					return argv[0] + argv[2];
				}
		| add '-' mul
				%c{
					return argv[0] - argv[2];
				}
		| mul
				%c{
					return argv[0];
				}
		;

	mul : mul '*' primary
				%c{
					return argv[0] * argv[2];
				}
		|  mul '/' primary
				%c{
					return argv[0] / argv[2];
				}
		| primary
				%c{
					return argv[0];
				}
		;

	primary: '(' add ')'
				%c{
					return argv[1];
				}
		| number
				%c{
					return argv[0];
				}
		;


	number : r'[0-9]+'
				%c{
					return argv[0].integer();
				}
		;

	~ : r'[ \t\r\n]+'
		;
}

print: 'start';
print: my.foo ('(3 * (4 + 3 / 2)) - 100');
print: 'done';

